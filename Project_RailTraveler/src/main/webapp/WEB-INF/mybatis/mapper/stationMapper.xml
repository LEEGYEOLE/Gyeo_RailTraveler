<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="station">

	<select id="listLocation" resultType="com.railer.rt.info.Station">
		select locNum, locName
		from location
	</select>
	
	<select id="listStation" parameterType="map" resultType="com.railer.rt.info.Station">
		select s.staNum, s.locNum, locName, staName,imageFilename
		from station s
		join location l on l.locNum=s.locNum
		<where>
			<if test="locNum!=0">
				l.locNum = #{locNum}	
			</if>
		</where>
		order by staName
		offset #{offset} rows fetch first #{rows} rows only
	</select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		select nvl(count(*),0)
		from station s
		join location l on s.locNum = l.locNum
		<where>
			<if test="locNum!=0">
				l.locNum = #{locNum}	
			</if>
		</where>
	</select>
	
	<select id="readStation" parameterType="Integer" resultType="com.railer.rt.info.Station">
		select s.locNum, locName, s.staNum, staName, staTel, staAddress,imageFilename
		from station s
		join location l on l.locNum=s.locNum
		where s.staNum = #{staNum}
	</select>
	
	<select id="listBenefit" parameterType="Integer" resultType="com.railer.rt.info.Station">
	    select s.staNum, beneNum, b.cateNum, cateName, subject, content, sDate, eDate
		from benefit b
        join tourCategory t on b.cateNum = t.cateNum
		join station s on s.staNum = b.staNum
		where s.staNum = #{staNum}
	</select>
	
	<select id="countBenefit" parameterType="Integer" resultType="Integer" >
		select nvl(count(*),0)
		from benefit b
        join tourCategory t on b.cateNum = t.cateNum
		join station s on s.staNum = b.staNum
		where s.staNum = #{staNum}
	</select>

	<select id="listTourCate" resultType="com.railer.rt.info.Station" >
		select cateNum, cateName
		from tourCategory
	</select>
	
	<insert id="insertStation" parameterType="com.railer.rt.info.Station">
		insert into station(staNum,staName,staTel,staAddress,imageFilename,locNum)
		values (station_seq.nextval,#{staName},#{staTel},#{staAddress},#{imageFilename},#{locNum})
	</insert>
	
	<update id="updateStation" parameterType="com.railer.rt.info.Station">
		update station set staName = #{staName}, staTel=#{staTel}, staAddress=#{staAddress},
			imageFilename=#{imageFilename}, locNum=#{locNum}
		where staNum = #{staNum}
	</update>
	
	<delete id="deleteStation" parameterType="Integer">
		delete from station
		where staNum = #{staNum}
	</delete>
	
	<delete id="deleteBenefit" parameterType="map">
		delete from benefit
		where
		<choose>
			<when test="remove == 'station'">
				staNum = #{staNum}
			</when>
			<otherwise>
				beneNum = #{beneNum}
			</otherwise>
		</choose>
	</delete>

	
</mapper>