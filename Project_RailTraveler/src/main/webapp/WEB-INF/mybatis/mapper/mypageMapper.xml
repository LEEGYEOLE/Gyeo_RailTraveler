<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mypage">

	<sql id="where-list">
		<choose>
			<when test="keyword == '7days' ">
			  	s.created >= SYSDATE - 7
			</when>
			<when test="keyword == '15days'">
			   s.created >= SYSDATE - 15
			</when>
			<when test="keyword == '1month'">
			   s.created >= add_months(SYSDATE,-1)
			</when>
			<when test="keyword == '3month'">
			   s.created >= add_months(SYSDATE,-3)
			</when>
			<when test="keyword == '5month'">
			   s.created >= add_months(SYSDATE,-5)
			</when>
			<otherwise>
				 s.created >= SYSDATE
			</otherwise>
		</choose>
	</sql>

	<!-- ticket 정보 list -->
	<select id="myTicketList"  parameterType="map" resultType="com.railer.rt.mypage.Ticket">
		select saleNum, s.userNum, userId, t.ticketNum, t.tName, t.year, t.division, s.sDate,s.eDate, s.created
		from sale s
		join ticket t on t.ticketNum = s.ticketNum
		join member2 m on s.userNum = m.userNum
		where userId = #{userId}
		<if test="keyword!='all'">
			AND <include refid="where-list"/>
		</if>
		ORDER BY saleNum
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>

	<select id="ticketDataCount" parameterType="map" resultType="Integer">
		select nvl(count(*),0) from sale s
		join ticket t on t.ticketNum = s.ticketNum
		join member2 m on s.userNum = m.userNum
		where m.userId = #{userId}
		<if test="keyword!='all'">
			AND <include refid="where-list"/>
		</if>
	</select>
	
	<!-- stamp list -->
	<select id="stampList" parameterType="map" resultType="com.railer.rt.mypage.Ticket">
		select s.saleNum, s.userNum, userId, s.sDate,s.eDate, stampNum, p.staNum, st.staName
		from sale s
		join ticket t on t.ticketNum = s.ticketNum
		join member2 m on s.userNum = m.userNum
		join stamp p on p.saleNum = s.saleNum
		join station st on p.staNum = st.staNum
		where userId = #{userId} and s.saleNum = #{saleNum}
	</select>
	
	<select id="stampDataCount" parameterType="map" resultType="Integer">
		select nvl(count(*),0) from sale s
		join ticket t on t.ticketNum = s.ticketNum
		join member2 m on s.userNum = m.userNum
		join stamp p on p.saleNum = s.saleNum
		join station st on p.staNum = st.staNum
		where userId = #{userId} and s.saleNum = #{saleNum}
	</select>
	
	<!-- 커뮤니티에서 북마크한 글 리스트 -->
	<sql id="where-list2">
		<choose>
			<when test="condition=='all'">	
				(INSTR(subject,#{keyword}) &gt; 0
				OR
				DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 
				OR
				(TO_CHAR(created, 'YYYY-MM-DD'))=#{keyword}
				OR
				INSTR(c.userId,#{keyword}) &gt; 0
				)
			</when>
			<when test="condition=='subject'">	
				(INSTR(subject,#{keyword}) &gt; 0
			</when>
			<when test="condition=='content'">
				DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
			</when>
			<when test="condition=='created'">
				(TO_CHAR(created, 'YYYY-MM-DD'))=#{keyword}
			</when>
			<when test="condition=='writer'">
				INSTR(c.userId,#{keyword}) &gt; 0
			</when>
			<otherwise>
				INSTR(${condition},#{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<select id="commuList" parameterType="map" resultType="com.railer.rt.mypage.Commu">
		<if test="commuName='qna'">
      		select q.qnaNum, q.userId, c.userId writer, subject, hitCount, to_char(created,'YYYY-MM-DD') created
			from qnaBookmark q
			join qna c on q.qnaNum = c.qnaNum
			where q.userId = #{userId}
			<if test="keyword!=null and keyword!=''">
	           and <include refid="where-list2"/>
	        </if>
	        ORDER BY q.qnaNum DESC
	      	OFFSET #{offset} ROWS fETCH FIRST #{rows} ROWS ONLY
      	</if>
      	<if test="commuName='board'">
      		select b.boardNum, b.userId, c.userId writer, subject, hitCount, to_char(created,'YYYY-MM-DD') created
			from boardBookmark b
			join board c on b.boardNum = c.boardNum
			where b.userId = #{userId}
			<if test="keyword!=null and keyword!=''">
	           and <include refid="where-list2"/>
	        </if>
	        ORDER BY b.boardNum DESC
	      	OFFSET #{offset} ROWS fETCH FIRST #{rows} ROWS ONLY
      	</if>
		<if test="commuName='friend'">
			select f.friendNum, f.userId, c.userId writer, subject, hitCount, to_char(created,'YYYY-MM-DD') created
			from friendBookmark f
			join friend c on f.friendNum = c.friendNum
			where f.userId = #{userId}
			<if test="keyword!=null and keyword!=''">
	           and <include refid="where-list2"/>
	        </if>
	        ORDER BY f.friendNum DESC
	      	OFFSET #{offset} ROWS fETCH FIRST #{rows} ROWS ONLY
      	</if>
	</select>
	
	<select id="commuDataCount" parameterType="map" resultType="Integer">
		<if test="commuName='qna'">
			select nvl(count(*),0) from qnaBookmark q
			join qna c on q.qnaNum = c.qnaNum
			where q.userId = #{userId}
			<if test="keyword!=null and keyword!=''">
	           and <include refid="where-list2"/>
	        </if>
        </if>
        <if test="commuName='board'">
			select nvl(count(*),0) from boardBookmark b
			join board c on b.boardNum = c.boardNum
			where b.userId = #{userId}
			<if test="keyword!=null and keyword!=''">
	           and <include refid="where-list2"/>
	        </if>
        </if>
		<if test="commuName='friend'">
			select nvl(count(*),0) from friendBookmark f
			join friend c on f.friendNum = c.friendNum
			where f.userId = #{userId}
			<if test="keyword!=null and keyword!=''">
	           and <include refid="where-list2"/>
	        </if>
        </if>
        
        
	</select>
	

</mapper>