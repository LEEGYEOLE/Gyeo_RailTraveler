<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="plan">
	
   <!-- planNum 시퀀스번호 -->
   <select id="planSeq" resultType="Integer">
   	SELECT plan_seq.NEXTVAL FROM dual;
   </select>
   
   <!-- detailPlanNum 시퀀스번호 -->
   <select id="detailPlanSeq" resultType="Integer">
   	SELECT dp_seq.NEXTVAL FROM dual;
   </select>
   
   <!-- 검색한 역 리스트  -->
   <select id="listStation" resultType="com.railer.rt.plan.Station">
   	SELECT staNum, locNum, staName, staTel, staAddress, imageFilename
   	FROM station
   	<where>
		<if test="keyword!=null and keyword!=''">
			INSTR(staName, #{keyword}) &gt; 0
		</if>
		<if test="locNum!=0">
			AND locNum=#{locNum}
		</if>
	</where>
   </select>
   
   <!-- 검색한 역 개수 -->
   <select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM station s
		JOIN location l on s.locNum=l.locNum
		<where>
			<if test="locNum!=0">
				l.locNum=#{locNum}
			</if>
		</where>   
	</select>
	
	<!-- 세부계획 모달창에서 카테고리 뿌리기 -->
	<select id="listCategory" parameterType="map" resultType="com.railer.rt.plan.Tour">
		SELECT t.cateNum, cateName, detailcateNum, detailcateName
		FROM tourcategory t
		JOIN detailtourcategory dt ON t.cateNum=dt.cateNum
		WHERE t.cateNum=#{cateNum}
	</select>
	
	<!-- 몇일차 여행인지 추가하기 -->
	<insert id="insertTicketDay" parameterType="map">
		INSERT INTO plan(planNum, userId, ticketDay, sDate)
			VALUES(#{planNum}, #{userId}, #{ticketDay}, #{sDate})
	</insert>
	
	<!-- 몇일차의 역과 세부계획 추가하기 -->
	<insert id="insertPlans" parameterType="map">
		INSERT INTO detailPlan(detailPlanNum, planNum, staNum, nthDay)
			VALUES(#{detailPlanNum}, #{planNum}, #{staNum}, #{nthDay})
	</insert>
	
	<!-- 세부계획 내용 저장하기  -->
	<insert id="insertDetailPlan" parameterType="map">
		INSERT INTO moreDetailPlan(mdpNum,detailPlanNum,cateNum,name,tel,address,longitude,latitude,memo,sTime,eTime,price)
			VALUES(mdp_seq.NEXTVAL,#{detailPlanNum},#{cateNum},#{name},#{tel},#{address},#{longitude, jdbcType=VARCHAR},#{latitude, jdbcType=VARCHAR},#{memo},#{sTime},#{eTime},#{price})
	</insert>
</mapper>